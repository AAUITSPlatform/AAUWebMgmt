@model ITSWebMgmt.Models.UserModel
@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="~/css/autocomplete.css" />
<script src="~/js/autocomplete.js" asp-append-version="true"></script>

<div class="ui dimmer modals page transition hidden" style="display: block !important;">
    <div id="modalConfirmOUmove" class="ui small test modal transition hidden" style="margin-top: -92px; display: block !important;">
        <div class="header">
            Move user to Default OU
        </div>
        <div class="content">
            <p>
                The user is placed in a non standard OU, this means applied GPOs and settings might differ from the standard.
                Run this task to move the user to the default configuration.
                <br />
                <br />
                <b><i>Warning: This action will affect the user, only run this it in agreement with the user!</i></b>
            </p>
        </div>
        <div class="actions">
            <div class="ui negative button">
                No
            </div>
            <div runat="server" class="ui positive right labeled icon button" onclick="$('#fixUserOU').click()">
                Yes
            </div>
        </div>
    </div>
</div>

<div id="loader">
    <div class="ui active dimmer" style="display: none">
        <div class="ui text loader">Loading</div>
    </div>
</div>

<h1>User Info</h1>
<div>
    <form method="get" autocomplete="off">
        <div class="ui action input">
            <div class="autocomplete" style="width:600px;">
                <input name="username" id="username" type="text" class="ui input focus" value=@Html.DisplayFor(model => model.UserName) />
            </div>
            <input type="submit" id="submitButton" value="Search" onclick='$("#loader > div").show("fast");' />
        </div>
        <br />
        <p>Users can be found using email, last 4 digits of phone numer, or AAU-ID</p>
    </form>
    <br />
    <br />
    <script>
        $(document).ready(function () {
            $('.menu .item').tab({ history: false });
        });
        let submitButton = document.getElementById("submitButton");
        let usernameElement = document.getElementById("username");
        let oldUsernameText = "";
        usernameElement.addEventListener("keyup", function (event) {
            if (event.keyCode === 13) {
                submitButton.click();
            }
        });
        window.setInterval(function () {
            if ($(document.activeElement).attr("type") == "text" || $(document.activeElement).attr("type") == "textarea") {
                if (oldUsernameText !== usernameElement.value) {
                    updateautocomplete(document.getElementById("username").value);
                    oldUsernameText = usernameElement.value;
                }
                
            }
        }, 1000);

        var names;

        function updateautocomplete(name) {
            $.ajax({
                type: "POST",
                url: 'User/GetUsersByName',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(name),
                dataType: "json",
                success: function (response) {
                    names = response.names.toString().split(',');
                    autocomplete(document.getElementById("username"), names);
                    var event = document.createEvent('Event');
                    event.initEvent('input', true, true);
                    document.getElementById("username").dispatchEvent(event);
                },
                error: function(response) {
                    var r = JSON.parse(response.responseText);
                    alert(r.errorMessage);
                }
            });
        }
        
    </script>
    <script>
        // Code for changing tab
        $(document).ready(function () {
            $('.menu .item').tab({
                'onVisible': function () {
                    $("#smloader > div").show("fast");
                    var dataTabName = $(this).attr("data-tab");
                    var urlParams = new URLSearchParams(window.location.search);
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("LoadTab", "User")',
                        contentType: "application/html; charset=utf-8",
                        data: { tabName: dataTabName, name: urlParams.get('username')},
                        success: function (returnedData) {
                            $("#" + dataTabName).html(returnedData);
                        },
                        error: function (responce) {
                            document.open();
                            document.write(responce.responseText);
                            document.close();
                        }
                    });
                }
            });
        });
    </script>

    @if (!Model.UserFound)
    {
        @Html.DisplayFor(model => model.ResultError)
    }
    else
    {
        <div runat="server" id="warningsAndErrorDIV">
            @Html.Raw(Model.ErrorCountMessage)
        </div>
        <h2>@Html.DisplayFor(model => model.DisplayName)</h2>
        <div class="ui grid">
            <div class="four wide column">
                <div class="ui vertical fluid tabular menu">
                    <a class="active item" data-tab="basicinfo">Basic Info</a>
                    @foreach (var tab in Model.Tabs)
                    {
                        <a class="item" data-tab=@tab.TabId>@tab.TabName</a>
                    }
                    @if (Model.ShowLoginScript)
                    {
                        <a class="item" data-tab="loginscript" runat="server" id="menuLoginScript">Loginscript</a>
                    }
                </div>
            </div>
            <div class="twelve wide stretched column">
                <div class="ui tab segment">
                    none<!-- spacer as the fist elemen else is placed differencet -->
                </div>
                <div class="ui active tab segment" id="" data-tab="basicinfo">@await Html.PartialAsync("BasicInfo", Model)</div>
                @foreach (var tab in Model.Tabs)
                {
                    <div class="ui tab segment" id=@tab.TabId data-tab=@tab.TabId>
                        @if (tab.ShowLoader)
                        {
                            <div id="smloader">
                                <div class="ui active dimmer" style="display: none">
                                    <div class="ui text loader">Loading</div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
</div>
